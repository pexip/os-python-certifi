From: =?utf-8?q?S=C3=A9bastien_Delafond?= <sdelafond@gmail.com>
Date: Wed, 11 Dec 2019 13:51:16 -0300
Subject: Use Debian provided /etc/ssl/certs/ca-certificates.cr

---
 certifi/core.py | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/certifi/core.py b/certifi/core.py
index 5d2b8cd..531430e 100644
--- a/certifi/core.py
+++ b/certifi/core.py
@@ -8,6 +8,8 @@ This module returns the installation location of cacert.pem or its contents.
 """
 import os
 
+DEBIAN_CA_CERTS_PATH = '/etc/ssl/certs/ca-certificates.crt'
+
 try:
     from importlib.resources import path as get_path, read_text
 
@@ -33,8 +35,7 @@ try:
             # We also have to hold onto the actual context manager, because
             # it will do the cleanup whenever it gets garbage collected, so
             # we will also store that at the global level as well.
-            _CACERT_CTX = get_path("certifi", "cacert.pem")
-            _CACERT_PATH = str(_CACERT_CTX.__enter__())
+            _CACERT_PATH = DEBIAN_CA_CERTS_PATH
 
         return _CACERT_PATH
 
@@ -51,10 +52,9 @@ except ImportError:
     # If we don't have importlib.resources, then we will just do the old logic
     # of assuming we're on the filesystem and munge the path directly.
     def where():
-        f = os.path.dirname(__file__)
-
-        return os.path.join(f, "cacert.pem")
+        return DEBIAN_CA_CERTS_PATH
 
 
 def contents():
-    return read_text("certifi", "cacert.pem", encoding="ascii")
+    with open(where(), "r", encoding="ascii") as data:
+        return data.read()
